"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const react_native_1 = require("react-native");
const InputSingleItem_1 = __importDefault(require("./InputSingleItem"));
const InputField_1 = __importDefault(require("./InputField"));
const AnimatedCodeInput = (props) => {
    const { value, numberOfInputs, onBlur, onChangeText, onSubmitCode } = props;
    const animatedCodeInputRef = react_1.useRef(null);
    const renderItem = react_1.useCallback((index) => (react_1.default.createElement(InputSingleItem_1.default, Object.assign({}, props, { value: value, key: `InputSingleItem ${index}`, index: index }))), [value, props]);
    const onPressCode = react_1.useCallback(() => {
        var _a;
        (_a = animatedCodeInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    }, [animatedCodeInputRef]);
    const onSubmit = react_1.useCallback(() => {
        onSubmitCode(value);
    }, [value, onSubmitCode]);
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(react_native_1.TouchableOpacity, { onPress: onPressCode, style: styles.items, activeOpacity: 1 },
            react_1.default.createElement(react_native_1.View, { style: styles.container }, Array(numberOfInputs || 1)
                .fill(0)
                .map((_item, index) => renderItem(index)))),
        react_1.default.createElement(InputField_1.default, Object.assign({}, props, { textInputRef: animatedCodeInputRef, onChangeText: onChangeText, onBlur: onBlur, codeMaxLength: numberOfInputs || 1, value: value, testID: "Animated_Code_Input", onSubmit: onSubmit }))));
};
const styles = react_native_1.StyleSheet.create({
    container: {
        flexDirection: "row",
        justifyContent: "space-around",
    },
    items: { alignItems: "stretch" },
});
exports.default = AnimatedCodeInput;
